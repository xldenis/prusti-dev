language: rust
dist: trusty
sudo: true

rust:
  - stable
  - beta
  - nightly

jdk:
  - oraclejdk8

cache:
  cargo: true
  directories:
  - .cache

env:
  global:
    - JAVA_HOME=/usr/lib/jvm/java-8-oracle
    - LD_LIBRARY_PATH=$JAVA_HOME/jre/lib/amd64/server
    - ASM_JAR=$HOME/asm.jar
    - RUST_BACKTRACE=1
    - RUST_LOG=viper=debug,viper-sys=debug,jni-gen=debug
    - Z3_PATH=/usr/bin/z3

before_install:
  # Make sure stdout is in blocking mode. Otherwise builds will fail due to large writes to stdout
  # See https://github.com/travis-ci/travis-ci/issues/4704. If this gets fixed, this line can also be removed.
  - python3 -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
  # Add Viper's PPA
  - wget -q -O - http://pmserver.inf.ethz.ch/viper/debs/xenial/key.asc | sudo apt-key add -
  - echo 'deb http://pmserver.inf.ethz.ch/viper/debs/xenial /' | sudo tee /etc/apt/sources.list.d/viper.list
  - travis_retry sudo apt-get update
  # Download and compile Z3 with a known-to-work version
  - if [ ! -d .cache/z3 ]; then
      echo "Building Z3 from scratch";
      wget -O z3.zip https://github.com/Z3Prover/z3/archive/3865c453827506fc5c9d6c6c7c3d66d17030f158.zip;
      unzip z3.zip;
      rm z3.zip;
      mv z3-3865c453827506fc5c9d6c6c7c3d66d17030f158 tmp-z3;
      cd tmp-z3;
      ./configure;
      cd build;
      make -j 2;
      cd ../..;
      mv tmp-z3 .cache/z3;
    else
      echo "Using cached Z3";
      ls .cache/z3;
    fi

install:
  - wget "http://central.maven.org/maven2/asm/asm/3.3.1/asm-3.3.1.jar" -O "$ASM_JAR"
  - travis_retry sudo apt-get install viper
  - cd .cache/z3/build; sudo make install; cd ../../..
  - if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
      cargo install rustfmt-nightly clippy --force;
    fi

script:
  - if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
      cargo fmt -- --write-mode=diff &&
      cargo clippy;
    fi
  - cargo build -vv
  - cargo test --verbose -- --nocapture
