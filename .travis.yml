language: rust
dist: trusty
sudo: true

rust:
  - nightly

jdk:
  - oraclejdk8

cache:
  cargo: true
  directories:
  - .cache

env:
  global:
    - JAVA_HOME=/usr/lib/jvm/java-8-oracle
    - LD_LIBRARY_PATH=$JAVA_HOME/jre/lib/amd64/server
    - ASM_JAR=$HOME/asm.jar
    - Z3_PATH=/usr/bin/z3
    - RUST_LOG=viper=debug,viper-sys=debug,jni-gen=debug
    - RUST_BACKTRACE=1
    - MODULES="jni-gen viper-sys viper prusti-viper prusti-interface prusti_contracts prusti"

git:
  submodules: false

before_install:
  # Make sure stdout is in blocking mode. Otherwise builds will fail due to large writes to stdout
  # See https://github.com/travis-ci/travis-ci/issues/4704. If this gets fixed, this line can also be removed.
  - python3 -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
  # Replace the SSH URL with the public URL, then init and update submodules
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive
  # Add Viper's PPA
  - wget -q -O - http://pmserver.inf.ethz.ch/viper/debs/xenial/key.asc | sudo apt-key add -
  - echo 'deb http://pmserver.inf.ethz.ch/viper/debs/xenial /' | sudo tee /etc/apt/sources.list.d/viper.list
  - travis_retry sudo apt-get update
  # Download and compile Z3 with a known-to-work version
  - if [ ! -d .cache/z3 ]; then (
      echo "Building Z3 from scratch" &&
      wget -O z3.zip https://github.com/Z3Prover/z3/archive/3865c453827506fc5c9d6c6c7c3d66d17030f158.zip &&
      unzip z3.zip &&
      rm z3.zip &&
      cd z3-* &&
      ./configure &&
      cd build &&
      make -j 2 &&
      cd ../.. &&
      mv z3-* .cache/z3
    ); else
      echo "Using cached Z3" &&
      ls .cache/z3;
    fi

install:
  - wget "http://central.maven.org/maven2/asm/asm/3.3.1/asm-3.3.1.jar" -O "$ASM_JAR"
  - travis_retry sudo apt-get install viper
  - ( cd .cache/z3/build && sudo make install )
  - cargo install mdbook --vers 0.0.26 || true

script:
  - cargo build --all -vv
  - cargo test --verbose -- --nocapture

after_success:
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_PULL_REQUEST" = "false" && "$TRAVIS_BRANCH" == "master" ]]; then
        echo "Build documentation" &&
        for module in $MODULES; do
          echo "Build documentation for $module" &&
          cd $module &&
          cargo rustdoc --lib -- -Z unstable-options --document-private-items --enable-commonmark &&
          cd ..;
        done &&
        echo "Build design documentation" &&
        cd design &&
        mdbook build &&
        cd .. &&
        cp -r design/book target/doc/design &&
        echo "<meta http-equiv=refresh content=0;url=design/index.html>" > target/doc/index.html &&
        git clone https://github.com/davisp/ghp-import.git &&
        ./ghp-import/ghp_import.py -n -p -f -m "Documentation upload" -r https://"$GH_TOKEN"@github.com/"$TRAVIS_REPO_SLUG.git" target/doc &&
        echo "Uploaded documentation";
      fi
